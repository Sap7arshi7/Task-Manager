{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-manager\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { supabase } from './supabaseClient';\nimport './index.css';\nimport TaskInput from './TaskInput'; // Import the new TaskInput component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [session, setSession] = useState(null);\n  const [isLoginView, setIsLoginView] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [tasks, setTasks] = useState([]); // State to hold tasks\n  const [editingTask, setEditingTask] = useState(null); // State to hold the task being edited\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [filter, setFilter] = useState('all'); // 'all', 'active', 'completed'\n\n  useEffect(() => {\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n    });\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Function to fetch tasks\n  const fetchTasks = async () => {\n    var _session$user;\n    if (session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id) {\n      let query = supabase.from('tasks').select('*').eq('user_id', session.user.id);\n      if (filter === 'active') {\n        query = query.eq('is_complete', false);\n      } else if (filter === 'completed') {\n        query = query.eq('is_complete', true);\n      }\n      const {\n        data,\n        error\n      } = await query.order('created_at', {\n        ascending: false\n      });\n      if (error) {\n        console.error('Error fetching tasks:', error.message);\n      } else {\n        setTasks(data);\n      }\n    } else {\n      setTasks([]); // Clear tasks if no user is logged in\n    }\n  };\n\n  // Fetch tasks whenever the session changes\n  useEffect(() => {\n    fetchTasks();\n  }, [session]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          display_name: displayName\n        }\n      }\n    });\n    if (error) {\n      alert(error.message);\n    } else {\n      alert('Check your email for the login link!');\n    }\n  };\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n  };\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\n    const {\n      error\n    } = await supabase.from('tasks').update({\n      is_complete: !currentStatus\n    }).eq('id', taskId);\n    if (error) {\n      alert('Error updating task status: ' + error.message);\n    } else {\n      fetchTasks(); // Re-fetch tasks to update the UI\n    }\n  };\n  const deleteTask = async taskId => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      const {\n        error\n      } = await supabase.from('tasks').delete().eq('id', taskId);\n      if (error) {\n        alert('Error deleting task: ' + error.message);\n      } else {\n        fetchTasks(); // Re-fetch tasks to update the UI\n      }\n    }\n  };\n  const startEditing = task => {\n    setEditingTask(task);\n    setEditTitle(task.title);\n    setEditDescription(task.description || '');\n  };\n  const cancelEditing = () => {\n    setEditingTask(null);\n    setEditTitle('');\n    setEditDescription('');\n  };\n  const saveEditedTask = async taskId => {\n    const {\n      error\n    } = await supabase.from('tasks').update({\n      title: editTitle,\n      description: editDescription\n    }).eq('id', taskId);\n    if (error) {\n      alert('Error updating task: ' + error.message);\n    } else {\n      setEditingTask(null);\n      setEditTitle('');\n      setEditDescription('');\n      fetchTasks();\n    }\n  };\n  const clearCompletedTasks = async () => {\n    if (window.confirm('Are you sure you want to delete all completed tasks?')) {\n      var _session$user2;\n      if (!(session !== null && session !== void 0 && (_session$user2 = session.user) !== null && _session$user2 !== void 0 && _session$user2.id)) {\n        alert('User not logged in.');\n        return;\n      }\n      const {\n        error\n      } = await supabase.from('tasks').delete().eq('user_id', session.user.id).eq('is_complete', true);\n      if (error) {\n        alert('Error clearing completed tasks: ' + error.message);\n      } else {\n        fetchTasks(); // Re-fetch tasks to update the UI\n      }\n    }\n  };\n  const getSurname = () => {\n    var _session$user3, _session$user3$user_m;\n    if (session !== null && session !== void 0 && (_session$user3 = session.user) !== null && _session$user3 !== void 0 && (_session$user3$user_m = _session$user3.user_metadata) !== null && _session$user3$user_m !== void 0 && _session$user3$user_m.display_name) {\n      const nameParts = session.user.user_metadata.display_name.split(' ');\n      return nameParts.length > 1 ? nameParts[nameParts.length - 1] : nameParts[0];\n    }\n    return 'User';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: session ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logged-in-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome, \", getSurname(), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n          session: session,\n          onTaskAdded: fetchTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('all'),\n            className: filter === 'all' ? 'active' : '',\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('active'),\n            className: filter === 'active' ? 'active' : '',\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('completed'),\n            className: filter === 'completed' ? 'active' : '',\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearCompletedTasks,\n            className: \"clear-completed-button\",\n            children: \"Clear Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks yet. Add one above!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: task.is_complete ? 'completed' : '',\n              children: (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: editTitle,\n                  onChange: e => setEditTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: editDescription,\n                  onChange: e => setEditDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveEditedTask(task.id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: cancelEditing,\n                  className: \"cancel-button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: task.is_complete,\n                  onChange: () => toggleTaskCompletion(task.id, task.is_complete)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 53\n                }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 74\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Status: \", task.is_complete ? 'Complete' : 'Active']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditing(task),\n                  className: \"edit-button\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteTask(task.id),\n                  className: \"delete-button\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isLoginView ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: isLoginView ? handleLogin : handleSignUp,\n            children: [!isLoginView && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Display Name\",\n              value: displayName,\n              onChange: e => setDisplayName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: isLoginView ? 'Login' : 'Create Account'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"toggle-form\",\n            onClick: () => setIsLoginView(!isLoginView),\n            children: isLoginView ? 'Need an account? Create one' : 'Already have an account? Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NrCBK6W0HJ3StHJaWV3eIpJp9Kg=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 286,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","supabase","TaskInput","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","session","setSession","isLoginView","setIsLoginView","email","setEmail","password","setPassword","displayName","setDisplayName","tasks","setTasks","editingTask","setEditingTask","editTitle","setEditTitle","editDescription","setEditDescription","filter","setFilter","auth","getSession","then","data","authListener","onAuthStateChange","_event","subscription","unsubscribe","fetchTasks","_session$user","user","id","query","from","select","eq","error","order","ascending","console","message","handleLogin","e","preventDefault","signInWithPassword","alert","handleSignUp","signUp","options","display_name","handleLogout","signOut","toggleTaskCompletion","taskId","currentStatus","update","is_complete","deleteTask","window","confirm","delete","startEditing","task","title","description","cancelEditing","saveEditedTask","clearCompletedTasks","_session$user2","getSurname","_session$user3","_session$user3$user_m","user_metadata","nameParts","split","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onTaskAdded","map","type","value","onChange","target","checked","onSubmit","placeholder","required","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["D:/task-manager/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { supabase } from './supabaseClient';\r\nimport './index.css';\r\nimport TaskInput from './TaskInput'; // Import the new TaskInput component\r\n\r\nconst App = () => {\r\n    const [session, setSession] = useState(null);\r\n    const [isLoginView, setIsLoginView] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [tasks, setTasks] = useState([]); // State to hold tasks\r\n    const [editingTask, setEditingTask] = useState(null); // State to hold the task being edited\r\n    const [editTitle, setEditTitle] = useState('');\r\n    const [editDescription, setEditDescription] = useState('');\r\n    const [filter, setFilter] = useState('all'); // 'all', 'active', 'completed'\r\n\r\n    useEffect(() => {\r\n        supabase.auth.getSession().then(({ data: { session } }) => {\r\n            setSession(session);\r\n        });\r\n\r\n        const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\r\n            setSession(session);\r\n        });\r\n\r\n        return () => {\r\n            authListener.subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    // Function to fetch tasks\r\n    const fetchTasks = async () => {\r\n        if (session?.user?.id) {\r\n            let query = supabase\r\n                .from('tasks')\r\n                .select('*')\r\n                .eq('user_id', session.user.id);\r\n\r\n            if (filter === 'active') {\r\n                query = query.eq('is_complete', false);\r\n            } else if (filter === 'completed') {\r\n                query = query.eq('is_complete', true);\r\n            }\r\n\r\n            const { data, error } = await query.order('created_at', { ascending: false });\r\n\r\n            if (error) {\r\n                console.error('Error fetching tasks:', error.message);\r\n            } else {\r\n                setTasks(data);\r\n            }\r\n        } else {\r\n            setTasks([]); // Clear tasks if no user is logged in\r\n        }\r\n    };\r\n\r\n    // Fetch tasks whenever the session changes\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [session]);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n        if (error) alert(error.message);\r\n    };\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n        const { error } = await supabase.auth.signUp({\r\n            email,\r\n            password,\r\n            options: {\r\n                data: {\r\n                    display_name: displayName,\r\n                },\r\n            },\r\n        });\r\n        if (error) {\r\n            alert(error.message);\r\n        } else {\r\n            alert('Check your email for the login link!');\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        await supabase.auth.signOut();\r\n    };\r\n\r\n    const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n        const { error } = await supabase\r\n            .from('tasks')\r\n            .update({ is_complete: !currentStatus })\r\n            .eq('id', taskId);\r\n\r\n        if (error) {\r\n            alert('Error updating task status: ' + error.message);\r\n        } else {\r\n            fetchTasks(); // Re-fetch tasks to update the UI\r\n        }\r\n    };\r\n\r\n    const deleteTask = async (taskId) => {\r\n        if (window.confirm('Are you sure you want to delete this task?')) {\r\n            const { error } = await supabase\r\n                .from('tasks')\r\n                .delete()\r\n                .eq('id', taskId);\r\n\r\n            if (error) {\r\n                alert('Error deleting task: ' + error.message);\r\n            } else {\r\n                fetchTasks(); // Re-fetch tasks to update the UI\r\n            }\r\n        }\r\n    };\r\n\r\n    const startEditing = (task) => {\r\n        setEditingTask(task);\r\n        setEditTitle(task.title);\r\n        setEditDescription(task.description || '');\r\n    };\r\n\r\n    const cancelEditing = () => {\r\n        setEditingTask(null);\r\n        setEditTitle('');\r\n        setEditDescription('');\r\n    };\r\n\r\n    const saveEditedTask = async (taskId) => {\r\n        const { error } = await supabase\r\n            .from('tasks')\r\n            .update({ title: editTitle, description: editDescription })\r\n            .eq('id', taskId);\r\n\r\n        if (error) {\r\n            alert('Error updating task: ' + error.message);\r\n        } else {\r\n            setEditingTask(null);\r\n            setEditTitle('');\r\n            setEditDescription('');\r\n            fetchTasks();\r\n        }\r\n    };\r\n\r\n    const clearCompletedTasks = async () => {\r\n        if (window.confirm('Are you sure you want to delete all completed tasks?')) {\r\n            if (!session?.user?.id) {\r\n                alert('User not logged in.');\r\n                return;\r\n            }\r\n\r\n            const { error } = await supabase\r\n                .from('tasks')\r\n                .delete()\r\n                .eq('user_id', session.user.id)\r\n                .eq('is_complete', true);\r\n\r\n            if (error) {\r\n                alert('Error clearing completed tasks: ' + error.message);\r\n            } else {\r\n                fetchTasks(); // Re-fetch tasks to update the UI\r\n            }\r\n        }\r\n    };\r\n\r\n    const getSurname = () => {\r\n        if (session?.user?.user_metadata?.display_name) {\r\n            const nameParts = session.user.user_metadata.display_name.split(' ');\r\n            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : nameParts[0];\r\n        }\r\n        return 'User';\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"app-header\">\r\n                <h1>Task Manager</h1>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                {session ? (\r\n                    <div className=\"logged-in-container\">\r\n                        <h2>Welcome, {getSurname()}!</h2>\r\n                        <button onClick={handleLogout}>Logout</button>\r\n\r\n                        <TaskInput session={session} onTaskAdded={fetchTasks} />\r\n\r\n                        <div className=\"filter-buttons\">\r\n                            <button onClick={() => setFilter('all')} className={filter === 'all' ? 'active' : ''}>All</button>\r\n                            <button onClick={() => setFilter('active')} className={filter === 'active' ? 'active' : ''}>Active</button>\r\n                            <button onClick={() => setFilter('completed')} className={filter === 'completed' ? 'active' : ''}>Completed</button>\r\n                            <button onClick={clearCompletedTasks} className=\"clear-completed-button\">Clear Completed</button>\r\n                        </div>\r\n\r\n                        <div className=\"task-list\">\r\n                            <h3>Your Tasks</h3>\r\n                            {tasks.length === 0 ? (\r\n                                <p>No tasks yet. Add one above!</p>\r\n                            ) : (\r\n                                <ul>\r\n                                    {tasks.map((task) => (\r\n                                        <li key={task.id} className={task.is_complete ? 'completed' : ''}>\r\n                                            {editingTask?.id === task.id ? (\r\n                                                <div className=\"edit-form\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={editTitle}\r\n                                                        onChange={(e) => setEditTitle(e.target.value)}\r\n                                                    />\r\n                                                    <textarea\r\n                                                        value={editDescription}\r\n                                                        onChange={(e) => setEditDescription(e.target.value)}\r\n                                                    ></textarea>\r\n                                                    <button onClick={() => saveEditedTask(task.id)}>Save</button>\r\n                                                    <button onClick={cancelEditing} className=\"cancel-button\">Cancel</button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={task.is_complete}\r\n                                                        onChange={() => toggleTaskCompletion(task.id, task.is_complete)}\r\n                                                    />\r\n                                                    <h4>{task.title}</h4>\r\n                                                    {task.description && <p>{task.description}</p>}\r\n                                                    <p>Status: {task.is_complete ? 'Complete' : 'Active'}</p>\r\n                                                    <button onClick={() => startEditing(task)} className=\"edit-button\">\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button onClick={() => deleteTask(task.id)} className=\"delete-button\">\r\n                                                        Delete\r\n                                                    </button>\r\n                                                </>\r\n                                            )}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <h2>{isLoginView ? 'Login' : 'Create Account'}</h2>\r\n                        <div className=\"form-container\">\r\n                            <form onSubmit={isLoginView ? handleLogin : handleSignUp}>\r\n                                {!isLoginView && (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Display Name\"\r\n                                        value={displayName}\r\n                                        onChange={(e) => setDisplayName(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                )}\r\n                                <input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <button type=\"submit\">{isLoginView ? 'Login' : 'Create Account'}</button>\r\n                            </form>\r\n                            <p className=\"toggle-form\" onClick={() => setIsLoginView(!isLoginView)}>\r\n                                {isLoginView ? 'Need an account? Create one' : 'Already have an account? Login'}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}