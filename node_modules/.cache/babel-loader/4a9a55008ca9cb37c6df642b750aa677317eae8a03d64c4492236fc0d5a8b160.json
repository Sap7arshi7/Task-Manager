{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-manager\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { supabase } from './supabaseClient';\nimport './index.css';\nimport TaskInput from './TaskInput'; // Import the new TaskInput component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [session, setSession] = useState(null);\n  const [isLoginView, setIsLoginView] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [tasks, setTasks] = useState([]); // State to hold tasks\n  const [editingTask, setEditingTask] = useState(null); // State to hold the task being edited\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  useEffect(() => {\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n    });\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Function to fetch tasks\n  const fetchTasks = async () => {\n    var _session$user;\n    if (session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id) {\n      const {\n        data,\n        error\n      } = await supabase.from('tasks').select('*').eq('user_id', session.user.id).order('created_at', {\n        ascending: false\n      });\n      if (error) {\n        console.error('Error fetching tasks:', error.message);\n      } else {\n        setTasks(data);\n      }\n    } else {\n      setTasks([]); // Clear tasks if no user is logged in\n    }\n  };\n\n  // Fetch tasks whenever the session changes\n  useEffect(() => {\n    fetchTasks();\n  }, [session]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) alert(error.message);\n  };\n  const handleSignUp = async e => {\n    e.preventDefault();\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          display_name: displayName\n        }\n      }\n    });\n    if (error) {\n      alert(error.message);\n    } else {\n      alert('Check your email for the login link!');\n    }\n  };\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n  };\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\n    const {\n      error\n    } = await supabase.from('tasks').update({\n      is_complete: !currentStatus\n    }).eq('id', taskId);\n    if (error) {\n      alert('Error updating task status: ' + error.message);\n    } else {\n      fetchTasks(); // Re-fetch tasks to update the UI\n    }\n  };\n  const deleteTask = async taskId => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      const {\n        error\n      } = await supabase.from('tasks').delete().eq('id', taskId);\n      if (error) {\n        alert('Error deleting task: ' + error.message);\n      } else {\n        fetchTasks(); // Re-fetch tasks to update the UI\n      }\n    }\n  };\n  const startEditing = task => {\n    setEditingTask(task);\n    setEditTitle(task.title);\n    setEditDescription(task.description || '');\n  };\n  const cancelEditing = () => {\n    setEditingTask(null);\n    setEditTitle('');\n    setEditDescription('');\n  };\n  const saveEditedTask = async taskId => {\n    const {\n      error\n    } = await supabase.from('tasks').update({\n      title: editTitle,\n      description: editDescription\n    }).eq('id', taskId);\n    if (error) {\n      alert('Error updating task: ' + error.message);\n    } else {\n      setEditingTask(null);\n      setEditTitle('');\n      setEditDescription('');\n      fetchTasks();\n    }\n  };\n  const getSurname = () => {\n    var _session$user2, _session$user2$user_m;\n    if (session !== null && session !== void 0 && (_session$user2 = session.user) !== null && _session$user2 !== void 0 && (_session$user2$user_m = _session$user2.user_metadata) !== null && _session$user2$user_m !== void 0 && _session$user2$user_m.display_name) {\n      const nameParts = session.user.user_metadata.display_name.split(' ');\n      return nameParts.length > 1 ? nameParts[nameParts.length - 1] : nameParts[0];\n    }\n    return 'User';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: session ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logged-in-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome, \", getSurname(), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n          session: session,\n          onTaskAdded: fetchTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks yet. Add one above!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: task.is_complete ? 'completed' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: task.is_complete,\n                onChange: () => toggleTaskCompletion(task.id, task.is_complete)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 45\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", task.is_complete ? 'Complete' : 'Active']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(task.id),\n                className: \"delete-button\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 45\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isLoginView ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: isLoginView ? handleLogin : handleSignUp,\n            children: [!isLoginView && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Display Name\",\n              value: displayName,\n              onChange: e => setDisplayName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: isLoginView ? 'Login' : 'Create Account'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"toggle-form\",\n            onClick: () => setIsLoginView(!isLoginView),\n            children: isLoginView ? 'Need an account? Create one' : 'Already have an account? Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"XPMIXZ0vPEp2ZEFEssTcaKbms6I=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 229,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","supabase","TaskInput","jsxDEV","_jsxDEV","App","_s","session","setSession","isLoginView","setIsLoginView","email","setEmail","password","setPassword","displayName","setDisplayName","tasks","setTasks","editingTask","setEditingTask","editTitle","setEditTitle","editDescription","setEditDescription","auth","getSession","then","data","authListener","onAuthStateChange","_event","subscription","unsubscribe","fetchTasks","_session$user","user","id","error","from","select","eq","order","ascending","console","message","handleLogin","e","preventDefault","signInWithPassword","alert","handleSignUp","signUp","options","display_name","handleLogout","signOut","toggleTaskCompletion","taskId","currentStatus","update","is_complete","deleteTask","window","confirm","delete","startEditing","task","title","description","cancelEditing","saveEditedTask","getSurname","_session$user2","_session$user2$user_m","user_metadata","nameParts","split","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onTaskAdded","map","type","checked","onChange","onSubmit","placeholder","value","target","required","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["D:/task-manager/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { supabase } from './supabaseClient';\r\nimport './index.css';\r\nimport TaskInput from './TaskInput'; // Import the new TaskInput component\r\n\r\nconst App = () => {\r\n    const [session, setSession] = useState(null);\r\n    const [isLoginView, setIsLoginView] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [tasks, setTasks] = useState([]); // State to hold tasks\r\n    const [editingTask, setEditingTask] = useState(null); // State to hold the task being edited\r\n    const [editTitle, setEditTitle] = useState('');\r\n    const [editDescription, setEditDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        supabase.auth.getSession().then(({ data: { session } }) => {\r\n            setSession(session);\r\n        });\r\n\r\n        const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {\r\n            setSession(session);\r\n        });\r\n\r\n        return () => {\r\n            authListener.subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    // Function to fetch tasks\r\n    const fetchTasks = async () => {\r\n        if (session?.user?.id) {\r\n            const { data, error } = await supabase\r\n                .from('tasks')\r\n                .select('*')\r\n                .eq('user_id', session.user.id)\r\n                .order('created_at', { ascending: false });\r\n\r\n            if (error) {\r\n                console.error('Error fetching tasks:', error.message);\r\n            } else {\r\n                setTasks(data);\r\n            }\r\n        } else {\r\n            setTasks([]); // Clear tasks if no user is logged in\r\n        }\r\n    };\r\n\r\n    // Fetch tasks whenever the session changes\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [session]);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const { error } = await supabase.auth.signInWithPassword({ email, password });\r\n        if (error) alert(error.message);\r\n    };\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n        const { error } = await supabase.auth.signUp({\r\n            email,\r\n            password,\r\n            options: {\r\n                data: {\r\n                    display_name: displayName,\r\n                },\r\n            },\r\n        });\r\n        if (error) {\r\n            alert(error.message);\r\n        } else {\r\n            alert('Check your email for the login link!');\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        await supabase.auth.signOut();\r\n    };\r\n\r\n    const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n        const { error } = await supabase\r\n            .from('tasks')\r\n            .update({ is_complete: !currentStatus })\r\n            .eq('id', taskId);\r\n\r\n        if (error) {\r\n            alert('Error updating task status: ' + error.message);\r\n        } else {\r\n            fetchTasks(); // Re-fetch tasks to update the UI\r\n        }\r\n    };\r\n\r\n    const deleteTask = async (taskId) => {\r\n        if (window.confirm('Are you sure you want to delete this task?')) {\r\n            const { error } = await supabase\r\n                .from('tasks')\r\n                .delete()\r\n                .eq('id', taskId);\r\n\r\n            if (error) {\r\n                alert('Error deleting task: ' + error.message);\r\n            } else {\r\n                fetchTasks(); // Re-fetch tasks to update the UI\r\n            }\r\n        }\r\n    };\r\n\r\n    const startEditing = (task) => {\r\n        setEditingTask(task);\r\n        setEditTitle(task.title);\r\n        setEditDescription(task.description || '');\r\n    };\r\n\r\n    const cancelEditing = () => {\r\n        setEditingTask(null);\r\n        setEditTitle('');\r\n        setEditDescription('');\r\n    };\r\n\r\n    const saveEditedTask = async (taskId) => {\r\n        const { error } = await supabase\r\n            .from('tasks')\r\n            .update({ title: editTitle, description: editDescription })\r\n            .eq('id', taskId);\r\n\r\n        if (error) {\r\n            alert('Error updating task: ' + error.message);\r\n        } else {\r\n            setEditingTask(null);\r\n            setEditTitle('');\r\n            setEditDescription('');\r\n            fetchTasks();\r\n        }\r\n    };\r\n\r\n    const getSurname = () => {\r\n        if (session?.user?.user_metadata?.display_name) {\r\n            const nameParts = session.user.user_metadata.display_name.split(' ');\r\n            return nameParts.length > 1 ? nameParts[nameParts.length - 1] : nameParts[0];\r\n        }\r\n        return 'User';\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"app-header\">\r\n                <h1>Task Manager</h1>\r\n            </header>\r\n            <main className=\"main-content\">\r\n                {session ? (\r\n                    <div className=\"logged-in-container\">\r\n                        <h2>Welcome, {getSurname()}!</h2>\r\n                        <button onClick={handleLogout}>Logout</button>\r\n\r\n                        <TaskInput session={session} onTaskAdded={fetchTasks} />\r\n\r\n                        <div className=\"task-list\">\r\n                            <h3>Your Tasks</h3>\r\n                            {tasks.length === 0 ? (\r\n                                <p>No tasks yet. Add one above!</p>\r\n                            ) : (\r\n                                <ul>\r\n                                    {tasks.map((task) => (\r\n                                        <li key={task.id} className={task.is_complete ? 'completed' : ''}>\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={task.is_complete}\r\n                                                onChange={() => toggleTaskCompletion(task.id, task.is_complete)}\r\n                                            />\r\n                                            <h4>{task.title}</h4>\r\n                                            {task.description && <p>{task.description}</p>}\r\n                                            <p>Status: {task.is_complete ? 'Complete' : 'Active'}</p>\r\n                                            <button onClick={() => deleteTask(task.id)} className=\"delete-button\">\r\n                                                Delete\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <h2>{isLoginView ? 'Login' : 'Create Account'}</h2>\r\n                        <div className=\"form-container\">\r\n                            <form onSubmit={isLoginView ? handleLogin : handleSignUp}>\r\n                                {!isLoginView && (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Display Name\"\r\n                                        value={displayName}\r\n                                        onChange={(e) => setDisplayName(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                )}\r\n                                <input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                                <button type=\"submit\">{isLoginView ? 'Login' : 'Create Account'}</button>\r\n                            </form>\r\n                            <p className=\"toggle-form\" onClick={() => setIsLoginView(!isLoginView)}>\r\n                                {isLoginView ? 'Need an account? Create one' : 'Already have an account? Login'}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}