{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-manager\\\\src\\\\TaskInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = ({\n  session,\n  onTaskAdded\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    var _session$user;\n    e.preventDefault();\n    setLoading(true);\n    if (!(session !== null && session !== void 0 && (_session$user = session.user) !== null && _session$user !== void 0 && _session$user.id)) {\n      alert('User not logged in.');\n      setLoading(false);\n      return;\n    }\n    const {\n      data,\n      error\n    } = await supabase.from('tasks').insert([{\n      user_id: session.user.id,\n      title,\n      description\n    }]);\n    if (error) {\n      alert(error.message);\n    } else {\n      setTitle('');\n      setDescription('');\n      if (onTaskAdded) {\n        onTaskAdded(); // Notify parent component that a task was added\n      }\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-input-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true,\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Task Description (optional)\",\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Adding...' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskInput, \"RtVYfq0blXdjpuhtkKx91y6nc4U=\");\n_c = TaskInput;\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","TaskInput","session","onTaskAdded","_s","title","setTitle","description","setDescription","loading","setLoading","handleSubmit","e","_session$user","preventDefault","user","id","alert","data","error","from","insert","user_id","message","onSubmit","className","children","type","placeholder","value","onChange","target","required","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/task-manager/src/TaskInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from './supabaseClient';\r\n\r\nconst TaskInput = ({ session, onTaskAdded }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        if (!session?.user?.id) {\r\n            alert('User not logged in.');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const { data, error } = await supabase\r\n            .from('tasks')\r\n            .insert([\r\n                {\r\n                    user_id: session.user.id,\r\n                    title,\r\n                    description,\r\n                },\r\n            ]);\r\n\r\n        if (error) {\r\n            alert(error.message);\r\n        } else {\r\n            setTitle('');\r\n            setDescription('');\r\n            if (onTaskAdded) {\r\n                onTaskAdded(); // Notify parent component that a task was added\r\n            }\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"task-input-form\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Task Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n                disabled={loading}\r\n            />\r\n            <textarea\r\n                placeholder=\"Task Description (optional)\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                disabled={loading}\r\n            ></textarea>\r\n            <button type=\"submit\" disabled={loading}>\r\n                {loading ? 'Adding...' : 'Add Task'}\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TaskInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAAA,IAAAC,aAAA;IAC9BD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClBJ,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI,EAACR,OAAO,aAAPA,OAAO,gBAAAW,aAAA,GAAPX,OAAO,CAAEa,IAAI,cAAAF,aAAA,eAAbA,aAAA,CAAeG,EAAE,GAAE;MACpBC,KAAK,CAAC,qBAAqB,CAAC;MAC5BP,UAAU,CAAC,KAAK,CAAC;MACjB;IACJ;IAEA,MAAM;MAAEQ,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMrB,QAAQ,CACjCsB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,CACJ;MACIC,OAAO,EAAEpB,OAAO,CAACa,IAAI,CAACC,EAAE;MACxBX,KAAK;MACLE;IACJ,CAAC,CACJ,CAAC;IAEN,IAAIY,KAAK,EAAE;MACPF,KAAK,CAACE,KAAK,CAACI,OAAO,CAAC;IACxB,CAAC,MAAM;MACHjB,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;MAClB,IAAIL,WAAW,EAAE;QACbA,WAAW,CAAC,CAAC,CAAC,CAAC;MACnB;IACJ;IACAO,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIV,OAAA;IAAMwB,QAAQ,EAAEb,YAAa;IAACc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBACrD1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGlB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;MAC1CG,QAAQ;MACRC,QAAQ,EAAExB;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFrC,OAAA;MACI4B,WAAW,EAAC,6BAA6B;MACzCC,KAAK,EAAEtB,WAAY;MACnBuB,QAAQ,EAAGlB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;MAChDI,QAAQ,EAAExB;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACZrC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAACM,QAAQ,EAAExB,OAAQ;MAAAiB,QAAA,EACnCjB,OAAO,GAAG,WAAW,GAAG;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACjC,EAAA,CA1DIH,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA4Df,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}